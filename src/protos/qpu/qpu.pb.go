// Code generated by protoc-gen-go. DO NOT EDIT.
// source: qpu.proto

package qpu

import (
	context "context"
	fmt "fmt"
	utils "github.com/dvasilas/proteus/src/protos/utils"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ResponseStreamRecord_StreamRecordType int32

const (
	ResponseStreamRecord_UPDATEOP      ResponseStreamRecord_StreamRecordType = 0
	ResponseStreamRecord_UPDATEDELTA   ResponseStreamRecord_StreamRecordType = 1
	ResponseStreamRecord_STATE         ResponseStreamRecord_StreamRecordType = 2
	ResponseStreamRecord_HEARTBEAT     ResponseStreamRecord_StreamRecordType = 3
	ResponseStreamRecord_END_OF_STREAM ResponseStreamRecord_StreamRecordType = 4
)

var ResponseStreamRecord_StreamRecordType_name = map[int32]string{
	0: "UPDATEOP",
	1: "UPDATEDELTA",
	2: "STATE",
	3: "HEARTBEAT",
	4: "END_OF_STREAM",
}

var ResponseStreamRecord_StreamRecordType_value = map[string]int32{
	"UPDATEOP":      0,
	"UPDATEDELTA":   1,
	"STATE":         2,
	"HEARTBEAT":     3,
	"END_OF_STREAM": 4,
}

func (x ResponseStreamRecord_StreamRecordType) String() string {
	return proto.EnumName(ResponseStreamRecord_StreamRecordType_name, int32(x))
}

func (ResponseStreamRecord_StreamRecordType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0be19c925dafeffa, []int{3, 0}
}

type ConfigResponse_QPUType int32

const (
	ConfigResponse_DBDRIVER              ConfigResponse_QPUType = 0
	ConfigResponse_FILTER                ConfigResponse_QPUType = 1
	ConfigResponse_INDEX                 ConfigResponse_QPUType = 2
	ConfigResponse_CACHE                 ConfigResponse_QPUType = 3
	ConfigResponse_FEDERATION_DISPATCHER ConfigResponse_QPUType = 4
	ConfigResponse_LOAD_BALANCER         ConfigResponse_QPUType = 5
	ConfigResponse_LAMBDA                ConfigResponse_QPUType = 6
	ConfigResponse_NETWORK               ConfigResponse_QPUType = 7
	ConfigResponse_INTERSECTION          ConfigResponse_QPUType = 8
)

var ConfigResponse_QPUType_name = map[int32]string{
	0: "DBDRIVER",
	1: "FILTER",
	2: "INDEX",
	3: "CACHE",
	4: "FEDERATION_DISPATCHER",
	5: "LOAD_BALANCER",
	6: "LAMBDA",
	7: "NETWORK",
	8: "INTERSECTION",
}

var ConfigResponse_QPUType_value = map[string]int32{
	"DBDRIVER":              0,
	"FILTER":                1,
	"INDEX":                 2,
	"CACHE":                 3,
	"FEDERATION_DISPATCHER": 4,
	"LOAD_BALANCER":         5,
	"LAMBDA":                6,
	"NETWORK":               7,
	"INTERSECTION":          8,
}

func (x ConfigResponse_QPUType) String() string {
	return proto.EnumName(ConfigResponse_QPUType_name, int32(x))
}

func (ConfigResponse_QPUType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0be19c925dafeffa, []int{7, 0}
}

type GetDataRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDataRequest) Reset()         { *m = GetDataRequest{} }
func (m *GetDataRequest) String() string { return proto.CompactTextString(m) }
func (*GetDataRequest) ProtoMessage()    {}
func (*GetDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0be19c925dafeffa, []int{0}
}

func (m *GetDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDataRequest.Unmarshal(m, b)
}
func (m *GetDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDataRequest.Marshal(b, m, deterministic)
}
func (m *GetDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDataRequest.Merge(m, src)
}
func (m *GetDataRequest) XXX_Size() int {
	return xxx_messageInfo_GetDataRequest.Size(m)
}
func (m *GetDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDataRequest proto.InternalMessageInfo

type DataTransferResponse struct {
	KBytesTranferred     float32  `protobuf:"fixed32,1,opt,name=kBytesTranferred,proto3" json:"kBytesTranferred,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataTransferResponse) Reset()         { *m = DataTransferResponse{} }
func (m *DataTransferResponse) String() string { return proto.CompactTextString(m) }
func (*DataTransferResponse) ProtoMessage()    {}
func (*DataTransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0be19c925dafeffa, []int{1}
}

func (m *DataTransferResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataTransferResponse.Unmarshal(m, b)
}
func (m *DataTransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataTransferResponse.Marshal(b, m, deterministic)
}
func (m *DataTransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataTransferResponse.Merge(m, src)
}
func (m *DataTransferResponse) XXX_Size() int {
	return xxx_messageInfo_DataTransferResponse.Size(m)
}
func (m *DataTransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DataTransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DataTransferResponse proto.InternalMessageInfo

func (m *DataTransferResponse) GetKBytesTranferred() float32 {
	if m != nil {
		return m.KBytesTranferred
	}
	return 0
}

type RequestStream struct {
	// Types that are valid to be assigned to Payload:
	//	*RequestStream_Request
	//	*RequestStream_Ack
	//	*RequestStream_Ping
	Payload              isRequestStream_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RequestStream) Reset()         { *m = RequestStream{} }
func (m *RequestStream) String() string { return proto.CompactTextString(m) }
func (*RequestStream) ProtoMessage()    {}
func (*RequestStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_0be19c925dafeffa, []int{2}
}

func (m *RequestStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestStream.Unmarshal(m, b)
}
func (m *RequestStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestStream.Marshal(b, m, deterministic)
}
func (m *RequestStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestStream.Merge(m, src)
}
func (m *RequestStream) XXX_Size() int {
	return xxx_messageInfo_RequestStream.Size(m)
}
func (m *RequestStream) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestStream.DiscardUnknown(m)
}

var xxx_messageInfo_RequestStream proto.InternalMessageInfo

type isRequestStream_Payload interface {
	isRequestStream_Payload()
}

type RequestStream_Request struct {
	Request *QueryRequest `protobuf:"bytes,1,opt,name=request,proto3,oneof"`
}

type RequestStream_Ack struct {
	Ack *AckMsg `protobuf:"bytes,2,opt,name=ack,proto3,oneof"`
}

type RequestStream_Ping struct {
	Ping *PingMsg `protobuf:"bytes,3,opt,name=ping,proto3,oneof"`
}

func (*RequestStream_Request) isRequestStream_Payload() {}

func (*RequestStream_Ack) isRequestStream_Payload() {}

func (*RequestStream_Ping) isRequestStream_Payload() {}

func (m *RequestStream) GetPayload() isRequestStream_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *RequestStream) GetRequest() *QueryRequest {
	if x, ok := m.GetPayload().(*RequestStream_Request); ok {
		return x.Request
	}
	return nil
}

func (m *RequestStream) GetAck() *AckMsg {
	if x, ok := m.GetPayload().(*RequestStream_Ack); ok {
		return x.Ack
	}
	return nil
}

func (m *RequestStream) GetPing() *PingMsg {
	if x, ok := m.GetPayload().(*RequestStream_Ping); ok {
		return x.Ping
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RequestStream) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RequestStream_Request)(nil),
		(*RequestStream_Ack)(nil),
		(*RequestStream_Ping)(nil),
	}
}

type ResponseStreamRecord struct {
	SequenceId           int64                                 `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId,proto3" json:"sequence_id,omitempty"`
	Type                 ResponseStreamRecord_StreamRecordType `protobuf:"varint,2,opt,name=type,proto3,enum=qpu.ResponseStreamRecord_StreamRecordType" json:"type,omitempty"`
	LogOp                *utils.LogOperation                   `protobuf:"bytes,3,opt,name=logOp,proto3" json:"logOp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *ResponseStreamRecord) Reset()         { *m = ResponseStreamRecord{} }
func (m *ResponseStreamRecord) String() string { return proto.CompactTextString(m) }
func (*ResponseStreamRecord) ProtoMessage()    {}
func (*ResponseStreamRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_0be19c925dafeffa, []int{3}
}

func (m *ResponseStreamRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseStreamRecord.Unmarshal(m, b)
}
func (m *ResponseStreamRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseStreamRecord.Marshal(b, m, deterministic)
}
func (m *ResponseStreamRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseStreamRecord.Merge(m, src)
}
func (m *ResponseStreamRecord) XXX_Size() int {
	return xxx_messageInfo_ResponseStreamRecord.Size(m)
}
func (m *ResponseStreamRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseStreamRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseStreamRecord proto.InternalMessageInfo

func (m *ResponseStreamRecord) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *ResponseStreamRecord) GetType() ResponseStreamRecord_StreamRecordType {
	if m != nil {
		return m.Type
	}
	return ResponseStreamRecord_UPDATEOP
}

func (m *ResponseStreamRecord) GetLogOp() *utils.LogOperation {
	if m != nil {
		return m.LogOp
	}
	return nil
}

type QueryRequest struct {
	//Timestamp is part of the attributes
	//Desclared explicitly here for easier parsing
	Clock                *utils.SnapshotTimePredicate `protobuf:"bytes,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Predicate            []*utils.AttributePredicate  `protobuf:"bytes,2,rep,name=predicate,proto3" json:"predicate,omitempty"`
	Metadata             map[string]string            `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Sync                 bool                         `protobuf:"varint,4,opt,name=sync,proto3" json:"sync,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0be19c925dafeffa, []int{4}
}

func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (m *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(m, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

func (m *QueryRequest) GetClock() *utils.SnapshotTimePredicate {
	if m != nil {
		return m.Clock
	}
	return nil
}

func (m *QueryRequest) GetPredicate() []*utils.AttributePredicate {
	if m != nil {
		return m.Predicate
	}
	return nil
}

func (m *QueryRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *QueryRequest) GetSync() bool {
	if m != nil {
		return m.Sync
	}
	return false
}

type AckMsg struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId,proto3" json:"sequence_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckMsg) Reset()         { *m = AckMsg{} }
func (m *AckMsg) String() string { return proto.CompactTextString(m) }
func (*AckMsg) ProtoMessage()    {}
func (*AckMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0be19c925dafeffa, []int{5}
}

func (m *AckMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckMsg.Unmarshal(m, b)
}
func (m *AckMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckMsg.Marshal(b, m, deterministic)
}
func (m *AckMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckMsg.Merge(m, src)
}
func (m *AckMsg) XXX_Size() int {
	return xxx_messageInfo_AckMsg.Size(m)
}
func (m *AckMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_AckMsg.DiscardUnknown(m)
}

var xxx_messageInfo_AckMsg proto.InternalMessageInfo

func (m *AckMsg) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

type ConfigRequest struct {
	Clock                *utils.SnapshotTimePredicate `protobuf:"bytes,1,opt,name=clock,proto3" json:"clock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ConfigRequest) Reset()         { *m = ConfigRequest{} }
func (m *ConfigRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigRequest) ProtoMessage()    {}
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0be19c925dafeffa, []int{6}
}

func (m *ConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigRequest.Unmarshal(m, b)
}
func (m *ConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigRequest.Marshal(b, m, deterministic)
}
func (m *ConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigRequest.Merge(m, src)
}
func (m *ConfigRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigRequest.Size(m)
}
func (m *ConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigRequest proto.InternalMessageInfo

func (m *ConfigRequest) GetClock() *utils.SnapshotTimePredicate {
	if m != nil {
		return m.Clock
	}
	return nil
}

type ConfigResponse struct {
	QpuType              ConfigResponse_QPUType      `protobuf:"varint,1,opt,name=qpu_type,json=qpuType,proto3,enum=qpu.ConfigResponse_QPUType" json:"qpu_type,omitempty"`
	SupportedQueries     []*utils.AttributePredicate `protobuf:"bytes,2,rep,name=supportedQueries,proto3" json:"supportedQueries,omitempty"`
	Dataset              *DataSet                    `protobuf:"bytes,3,opt,name=dataset,proto3" json:"dataset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ConfigResponse) Reset()         { *m = ConfigResponse{} }
func (m *ConfigResponse) String() string { return proto.CompactTextString(m) }
func (*ConfigResponse) ProtoMessage()    {}
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0be19c925dafeffa, []int{7}
}

func (m *ConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigResponse.Unmarshal(m, b)
}
func (m *ConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigResponse.Marshal(b, m, deterministic)
}
func (m *ConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigResponse.Merge(m, src)
}
func (m *ConfigResponse) XXX_Size() int {
	return xxx_messageInfo_ConfigResponse.Size(m)
}
func (m *ConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigResponse proto.InternalMessageInfo

func (m *ConfigResponse) GetQpuType() ConfigResponse_QPUType {
	if m != nil {
		return m.QpuType
	}
	return ConfigResponse_DBDRIVER
}

func (m *ConfigResponse) GetSupportedQueries() []*utils.AttributePredicate {
	if m != nil {
		return m.SupportedQueries
	}
	return nil
}

func (m *ConfigResponse) GetDataset() *DataSet {
	if m != nil {
		return m.Dataset
	}
	return nil
}

type DataSet struct {
	Databases            map[string]*DataSet_DB `protobuf:"bytes,1,rep,name=databases,proto3" json:"databases,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DataSet) Reset()         { *m = DataSet{} }
func (m *DataSet) String() string { return proto.CompactTextString(m) }
func (*DataSet) ProtoMessage()    {}
func (*DataSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_0be19c925dafeffa, []int{8}
}

func (m *DataSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataSet.Unmarshal(m, b)
}
func (m *DataSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataSet.Marshal(b, m, deterministic)
}
func (m *DataSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataSet.Merge(m, src)
}
func (m *DataSet) XXX_Size() int {
	return xxx_messageInfo_DataSet.Size(m)
}
func (m *DataSet) XXX_DiscardUnknown() {
	xxx_messageInfo_DataSet.DiscardUnknown(m)
}

var xxx_messageInfo_DataSet proto.InternalMessageInfo

func (m *DataSet) GetDatabases() map[string]*DataSet_DB {
	if m != nil {
		return m.Databases
	}
	return nil
}

type DataSet_DB struct {
	Datacenters          map[string]*DataSet_DC `protobuf:"bytes,1,rep,name=datacenters,proto3" json:"datacenters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DataSet_DB) Reset()         { *m = DataSet_DB{} }
func (m *DataSet_DB) String() string { return proto.CompactTextString(m) }
func (*DataSet_DB) ProtoMessage()    {}
func (*DataSet_DB) Descriptor() ([]byte, []int) {
	return fileDescriptor_0be19c925dafeffa, []int{8, 0}
}

func (m *DataSet_DB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataSet_DB.Unmarshal(m, b)
}
func (m *DataSet_DB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataSet_DB.Marshal(b, m, deterministic)
}
func (m *DataSet_DB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataSet_DB.Merge(m, src)
}
func (m *DataSet_DB) XXX_Size() int {
	return xxx_messageInfo_DataSet_DB.Size(m)
}
func (m *DataSet_DB) XXX_DiscardUnknown() {
	xxx_messageInfo_DataSet_DB.DiscardUnknown(m)
}

var xxx_messageInfo_DataSet_DB proto.InternalMessageInfo

func (m *DataSet_DB) GetDatacenters() map[string]*DataSet_DC {
	if m != nil {
		return m.Datacenters
	}
	return nil
}

type DataSet_DC struct {
	Shards               []string `protobuf:"bytes,1,rep,name=shards,proto3" json:"shards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataSet_DC) Reset()         { *m = DataSet_DC{} }
func (m *DataSet_DC) String() string { return proto.CompactTextString(m) }
func (*DataSet_DC) ProtoMessage()    {}
func (*DataSet_DC) Descriptor() ([]byte, []int) {
	return fileDescriptor_0be19c925dafeffa, []int{8, 1}
}

func (m *DataSet_DC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataSet_DC.Unmarshal(m, b)
}
func (m *DataSet_DC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataSet_DC.Marshal(b, m, deterministic)
}
func (m *DataSet_DC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataSet_DC.Merge(m, src)
}
func (m *DataSet_DC) XXX_Size() int {
	return xxx_messageInfo_DataSet_DC.Size(m)
}
func (m *DataSet_DC) XXX_DiscardUnknown() {
	xxx_messageInfo_DataSet_DC.DiscardUnknown(m)
}

var xxx_messageInfo_DataSet_DC proto.InternalMessageInfo

func (m *DataSet_DC) GetShards() []string {
	if m != nil {
		return m.Shards
	}
	return nil
}

type PingMsg struct {
	SeqId                int64    `protobuf:"varint,1,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingMsg) Reset()         { *m = PingMsg{} }
func (m *PingMsg) String() string { return proto.CompactTextString(m) }
func (*PingMsg) ProtoMessage()    {}
func (*PingMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0be19c925dafeffa, []int{9}
}

func (m *PingMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingMsg.Unmarshal(m, b)
}
func (m *PingMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingMsg.Marshal(b, m, deterministic)
}
func (m *PingMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingMsg.Merge(m, src)
}
func (m *PingMsg) XXX_Size() int {
	return xxx_messageInfo_PingMsg.Size(m)
}
func (m *PingMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_PingMsg.DiscardUnknown(m)
}

var xxx_messageInfo_PingMsg proto.InternalMessageInfo

func (m *PingMsg) GetSeqId() int64 {
	if m != nil {
		return m.SeqId
	}
	return 0
}

func init() {
	proto.RegisterEnum("qpu.ResponseStreamRecord_StreamRecordType", ResponseStreamRecord_StreamRecordType_name, ResponseStreamRecord_StreamRecordType_value)
	proto.RegisterEnum("qpu.ConfigResponse_QPUType", ConfigResponse_QPUType_name, ConfigResponse_QPUType_value)
	proto.RegisterType((*GetDataRequest)(nil), "qpu.GetDataRequest")
	proto.RegisterType((*DataTransferResponse)(nil), "qpu.DataTransferResponse")
	proto.RegisterType((*RequestStream)(nil), "qpu.RequestStream")
	proto.RegisterType((*ResponseStreamRecord)(nil), "qpu.ResponseStreamRecord")
	proto.RegisterType((*QueryRequest)(nil), "qpu.QueryRequest")
	proto.RegisterMapType((map[string]string)(nil), "qpu.QueryRequest.MetadataEntry")
	proto.RegisterType((*AckMsg)(nil), "qpu.AckMsg")
	proto.RegisterType((*ConfigRequest)(nil), "qpu.ConfigRequest")
	proto.RegisterType((*ConfigResponse)(nil), "qpu.ConfigResponse")
	proto.RegisterType((*DataSet)(nil), "qpu.DataSet")
	proto.RegisterMapType((map[string]*DataSet_DB)(nil), "qpu.DataSet.DatabasesEntry")
	proto.RegisterType((*DataSet_DB)(nil), "qpu.DataSet.DB")
	proto.RegisterMapType((map[string]*DataSet_DC)(nil), "qpu.DataSet.DB.DatacentersEntry")
	proto.RegisterType((*DataSet_DC)(nil), "qpu.DataSet.DC")
	proto.RegisterType((*PingMsg)(nil), "qpu.PingMsg")
}

func init() { proto.RegisterFile("qpu.proto", fileDescriptor_0be19c925dafeffa) }

var fileDescriptor_0be19c925dafeffa = []byte{
	// 963 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x4d, 0x6f, 0xe3, 0x36,
	0x13, 0xb6, 0xe4, 0x4f, 0x8d, 0xf3, 0xc1, 0xe5, 0x26, 0x2f, 0x1c, 0xef, 0x02, 0x09, 0x04, 0xbc,
	0x45, 0x36, 0x40, 0x9d, 0xc2, 0x05, 0xb6, 0x1f, 0x5b, 0x14, 0xd0, 0x07, 0xb3, 0x31, 0xea, 0xd8,
	0x0a, 0xad, 0xb4, 0x45, 0x0f, 0x35, 0x14, 0x89, 0x71, 0x84, 0x38, 0x92, 0x2c, 0x52, 0x0b, 0xf8,
	0xda, 0x5b, 0x2f, 0x3d, 0xf4, 0xd6, 0x7f, 0xd3, 0x1f, 0xd0, 0xfe, 0xa7, 0x42, 0x94, 0xdc, 0xd8,
	0x9b, 0x14, 0x8b, 0xa2, 0x27, 0x0d, 0x87, 0xcf, 0x0c, 0x1f, 0x8e, 0x9e, 0xe1, 0x80, 0xb6, 0x48,
	0xb2, 0x5e, 0x92, 0xc6, 0x22, 0xc6, 0xd5, 0x45, 0x92, 0x75, 0xdb, 0x99, 0x08, 0xe7, 0xbc, 0xf0,
	0xe8, 0x08, 0x76, 0xde, 0x32, 0x61, 0x7b, 0xc2, 0xa3, 0x6c, 0x91, 0x31, 0x2e, 0x74, 0x13, 0xf6,
	0xf2, 0xa5, 0x9b, 0x7a, 0x11, 0xbf, 0x61, 0x29, 0x65, 0x3c, 0x89, 0x23, 0xce, 0xf0, 0x09, 0xa0,
	0x3b, 0x73, 0x29, 0x18, 0xcf, 0x77, 0x6e, 0x58, 0x9a, 0xb2, 0xa0, 0xa3, 0x1c, 0x29, 0xc7, 0x2a,
	0x7d, 0xe4, 0xd7, 0x7f, 0x51, 0x60, 0xbb, 0xcc, 0x37, 0x11, 0x29, 0xf3, 0xee, 0xf1, 0xc7, 0xd0,
	0x4c, 0x0b, 0x87, 0x0c, 0x6a, 0xf7, 0x9f, 0xf5, 0x72, 0x5a, 0x97, 0x19, 0x4b, 0x97, 0x25, 0xf2,
	0xbc, 0x42, 0x57, 0x18, 0x7c, 0x08, 0x55, 0xcf, 0xbf, 0xeb, 0xa8, 0x12, 0xda, 0x96, 0x50, 0xc3,
	0xbf, 0xbb, 0xe0, 0xb3, 0xf3, 0x0a, 0xcd, 0x77, 0xb0, 0x0e, 0xb5, 0x24, 0x8c, 0x66, 0x9d, 0xaa,
	0x44, 0x6c, 0x49, 0x84, 0x13, 0x46, 0xb3, 0x02, 0x22, 0xf7, 0x4c, 0x0d, 0x9a, 0x89, 0xb7, 0x9c,
	0xc7, 0x5e, 0xa0, 0xff, 0xa4, 0xc2, 0xde, 0xea, 0x26, 0x05, 0x23, 0xca, 0xfc, 0x38, 0x0d, 0xf0,
	0x21, 0xb4, 0x79, 0x7e, 0x66, 0xe4, 0xb3, 0x69, 0x58, 0x5c, 0xa8, 0x4a, 0x61, 0xe5, 0x1a, 0x04,
	0xf8, 0x6b, 0xa8, 0x89, 0x65, 0xc2, 0x24, 0x95, 0x9d, 0xfe, 0x89, 0x3c, 0xe8, 0xa9, 0x4c, 0xbd,
	0xf5, 0x85, 0xbb, 0x4c, 0x18, 0x95, 0x71, 0xf8, 0x15, 0xd4, 0xe7, 0xf1, 0x6c, 0x9c, 0x94, 0x4c,
	0x9f, 0xf7, 0x8a, 0xea, 0x0f, 0x73, 0x1f, 0x4b, 0x3d, 0x11, 0xc6, 0x11, 0x2d, 0x10, 0xfa, 0x8f,
	0x80, 0xde, 0x4f, 0x82, 0xb7, 0xa0, 0x75, 0xe5, 0xd8, 0x86, 0x4b, 0xc6, 0x0e, 0xaa, 0xe0, 0x5d,
	0x68, 0x17, 0x2b, 0x9b, 0x0c, 0x5d, 0x03, 0x29, 0x58, 0x83, 0xfa, 0xc4, 0x35, 0x5c, 0x82, 0x54,
	0xbc, 0x0d, 0xda, 0x39, 0x31, 0xa8, 0x6b, 0x12, 0xc3, 0x45, 0x55, 0xfc, 0x0c, 0xb6, 0xc9, 0xc8,
	0x9e, 0x8e, 0xcf, 0xa6, 0x13, 0x97, 0x12, 0xe3, 0x02, 0xd5, 0xf4, 0x9f, 0x55, 0xd8, 0x5a, 0x2f,
	0x38, 0xee, 0x43, 0xdd, 0x9f, 0xc7, 0xfe, 0x5d, 0xf9, 0x4b, 0x5e, 0x96, 0xdc, 0x26, 0x91, 0x97,
	0xf0, 0xdb, 0x58, 0xb8, 0xe1, 0x3d, 0x73, 0x52, 0x16, 0x84, 0xbe, 0x27, 0x18, 0x2d, 0xa0, 0xf8,
	0x33, 0xd0, 0x92, 0x95, 0xaf, 0xa3, 0x1e, 0x55, 0x8f, 0xdb, 0xfd, 0x83, 0x32, 0xce, 0x10, 0x22,
	0x0d, 0xaf, 0x33, 0xb1, 0x16, 0xf4, 0x80, 0xc5, 0x6f, 0xa0, 0x75, 0xcf, 0x84, 0x17, 0x78, 0xc2,
	0xeb, 0x54, 0x65, 0xdc, 0xe1, 0x23, 0x09, 0xf4, 0x2e, 0x4a, 0x04, 0x89, 0x44, 0xba, 0xa4, 0x7f,
	0x07, 0x60, 0x0c, 0x35, 0xbe, 0x8c, 0xfc, 0x4e, 0xed, 0x48, 0x39, 0x6e, 0x51, 0x69, 0x77, 0xdf,
	0xc0, 0xf6, 0x06, 0x1c, 0x23, 0xa8, 0xde, 0xb1, 0xa5, 0xbc, 0x8c, 0x46, 0x73, 0x13, 0xef, 0x41,
	0xfd, 0x9d, 0x37, 0xcf, 0x8a, 0xbf, 0xa7, 0xd1, 0x62, 0xf1, 0xa5, 0xfa, 0xb9, 0xa2, 0xbf, 0x82,
	0x46, 0x21, 0xa8, 0x0f, 0x2a, 0x40, 0xb7, 0x60, 0xdb, 0x8a, 0xa3, 0x9b, 0x70, 0xf6, 0x1f, 0xca,
	0xa6, 0xff, 0xa1, 0xc2, 0xce, 0x2a, 0x4b, 0xd9, 0x50, 0xaf, 0xa1, 0xb5, 0x48, 0xb2, 0xa9, 0x54,
	0x97, 0x22, 0xd5, 0xf5, 0x42, 0x16, 0x64, 0x13, 0xd6, 0xbb, 0x74, 0xae, 0xa4, 0x9c, 0x9a, 0x8b,
	0x24, 0x93, 0x92, 0x20, 0x80, 0x78, 0x96, 0x24, 0x71, 0x2a, 0x58, 0x90, 0x17, 0x2f, 0x64, 0xfc,
	0xc3, 0x3f, 0xe2, 0x51, 0x08, 0xfe, 0x08, 0x9a, 0x79, 0xe9, 0x38, 0x13, 0x1b, 0x4d, 0x94, 0xf7,
	0xfe, 0x84, 0x09, 0xba, 0xda, 0xd4, 0x7f, 0x55, 0xa0, 0x59, 0x72, 0xc8, 0xd5, 0x68, 0x9b, 0x36,
	0x1d, 0x7c, 0x4b, 0x28, 0xaa, 0x60, 0x80, 0xc6, 0xd9, 0x60, 0xe8, 0x12, 0x5a, 0x08, 0x71, 0x30,
	0xb2, 0xc9, 0xf7, 0x48, 0xcd, 0x4d, 0xcb, 0xb0, 0xce, 0x09, 0xaa, 0xe2, 0x03, 0xd8, 0x3f, 0x23,
	0x36, 0xa1, 0x86, 0x3b, 0x18, 0x8f, 0xa6, 0xf6, 0x60, 0xe2, 0x18, 0xae, 0x75, 0x4e, 0x28, 0xaa,
	0xe5, 0xfa, 0x1c, 0x8e, 0x0d, 0x7b, 0x6a, 0x1a, 0x43, 0x63, 0x64, 0x11, 0x8a, 0xea, 0x79, 0xbe,
	0xa1, 0x71, 0x61, 0xda, 0x06, 0x6a, 0xe0, 0x36, 0x34, 0x47, 0xc4, 0xfd, 0x6e, 0x4c, 0xbf, 0x41,
	0x4d, 0x8c, 0x60, 0x6b, 0x30, 0x72, 0x09, 0x9d, 0x10, 0x2b, 0x4f, 0x84, 0x5a, 0xfa, 0x9f, 0x2a,
	0x34, 0x4b, 0xa6, 0xf8, 0x0b, 0xd0, 0x72, 0xae, 0xd7, 0x1e, 0x67, 0xbc, 0xa3, 0xc8, 0x42, 0xbc,
	0x58, 0xbf, 0x8a, 0xfc, 0xca, 0xdd, 0x42, 0x55, 0x0f, 0xe8, 0xee, 0x6f, 0x0a, 0xa8, 0xb6, 0x89,
	0x4d, 0x68, 0xe7, 0x3e, 0x9f, 0x45, 0x82, 0xa5, 0xab, 0x1c, 0x47, 0x9b, 0x39, 0x4c, 0x69, 0x96,
	0x90, 0x22, 0xd1, 0x7a, 0x50, 0x77, 0x0c, 0xe8, 0x7d, 0xc0, 0x13, 0x82, 0xfc, 0xff, 0xba, 0x20,
	0xdb, 0xfd, 0xdd, 0xcd, 0x33, 0xac, 0x35, 0x85, 0x76, 0x5f, 0x82, 0x6a, 0x5b, 0xf8, 0x7f, 0xd0,
	0xe0, 0xb7, 0x5e, 0x1a, 0x14, 0xac, 0x34, 0x5a, 0xae, 0xba, 0x17, 0xb0, 0xb3, 0x79, 0xad, 0x7f,
	0x7d, 0x98, 0xb9, 0xde, 0x0e, 0x47, 0xd0, 0x2c, 0x5f, 0x4f, 0xbc, 0x0f, 0x0d, 0xce, 0x16, 0x0f,
	0xad, 0x50, 0xe7, 0x6c, 0x31, 0x08, 0xfa, 0xbf, 0x2b, 0x50, 0xbd, 0x74, 0xae, 0xf0, 0x57, 0x50,
	0x97, 0x1d, 0x8b, 0x71, 0xf9, 0x14, 0xae, 0xbd, 0xf2, 0xdd, 0x83, 0x7f, 0x7c, 0x1e, 0xf5, 0xca,
	0xb1, 0xf2, 0x89, 0x82, 0x5f, 0x83, 0xf6, 0x96, 0x89, 0x42, 0xe1, 0x65, 0x86, 0x8d, 0xde, 0xea,
	0x3e, 0x7f, 0xa2, 0x05, 0xf4, 0x0a, 0xb6, 0x60, 0xb7, 0x1c, 0x53, 0xab, 0xb9, 0x84, 0x0b, 0xe4,
	0xe6, 0xf0, 0x2a, 0x09, 0x3c, 0x35, 0xbf, 0xf4, 0x8a, 0x39, 0x86, 0xfd, 0x30, 0xee, 0xcd, 0xd2,
	0xc4, 0x97, 0xc3, 0x8f, 0x65, 0xdc, 0x9f, 0x87, 0x2c, 0x12, 0x66, 0xeb, 0xd2, 0xb9, 0x72, 0xf2,
	0x71, 0xe8, 0x28, 0x3f, 0x9c, 0xcc, 0x42, 0x71, 0x9b, 0x5d, 0xf7, 0xfc, 0xf8, 0xfe, 0x34, 0x78,
	0xe7, 0xf1, 0x70, 0xee, 0xf1, 0xd3, 0x12, 0x7e, 0xca, 0x53, 0x5f, 0xda, 0x31, 0x3f, 0x5d, 0x24,
	0xd9, 0x75, 0x43, 0xda, 0x9f, 0xfe, 0x15, 0x00, 0x00, 0xff, 0xff, 0x47, 0xf7, 0x3a, 0x85, 0x62,
	0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QPUClient is the client API for QPU service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QPUClient interface {
	Query(ctx context.Context, opts ...grpc.CallOption) (QPU_QueryClient, error)
	GetConfig(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigResponse, error)
	GetDataTransfer(ctx context.Context, in *GetDataRequest, opts ...grpc.CallOption) (*DataTransferResponse, error)
}

type qPUClient struct {
	cc *grpc.ClientConn
}

func NewQPUClient(cc *grpc.ClientConn) QPUClient {
	return &qPUClient{cc}
}

func (c *qPUClient) Query(ctx context.Context, opts ...grpc.CallOption) (QPU_QueryClient, error) {
	stream, err := c.cc.NewStream(ctx, &_QPU_serviceDesc.Streams[0], "/qpu.QPU/Query", opts...)
	if err != nil {
		return nil, err
	}
	x := &qPUQueryClient{stream}
	return x, nil
}

type QPU_QueryClient interface {
	Send(*RequestStream) error
	Recv() (*ResponseStreamRecord, error)
	grpc.ClientStream
}

type qPUQueryClient struct {
	grpc.ClientStream
}

func (x *qPUQueryClient) Send(m *RequestStream) error {
	return x.ClientStream.SendMsg(m)
}

func (x *qPUQueryClient) Recv() (*ResponseStreamRecord, error) {
	m := new(ResponseStreamRecord)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *qPUClient) GetConfig(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigResponse, error) {
	out := new(ConfigResponse)
	err := c.cc.Invoke(ctx, "/qpu.QPU/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qPUClient) GetDataTransfer(ctx context.Context, in *GetDataRequest, opts ...grpc.CallOption) (*DataTransferResponse, error) {
	out := new(DataTransferResponse)
	err := c.cc.Invoke(ctx, "/qpu.QPU/GetDataTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QPUServer is the server API for QPU service.
type QPUServer interface {
	Query(QPU_QueryServer) error
	GetConfig(context.Context, *ConfigRequest) (*ConfigResponse, error)
	GetDataTransfer(context.Context, *GetDataRequest) (*DataTransferResponse, error)
}

func RegisterQPUServer(s *grpc.Server, srv QPUServer) {
	s.RegisterService(&_QPU_serviceDesc, srv)
}

func _QPU_Query_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(QPUServer).Query(&qPUQueryServer{stream})
}

type QPU_QueryServer interface {
	Send(*ResponseStreamRecord) error
	Recv() (*RequestStream, error)
	grpc.ServerStream
}

type qPUQueryServer struct {
	grpc.ServerStream
}

func (x *qPUQueryServer) Send(m *ResponseStreamRecord) error {
	return x.ServerStream.SendMsg(m)
}

func (x *qPUQueryServer) Recv() (*RequestStream, error) {
	m := new(RequestStream)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _QPU_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QPUServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/qpu.QPU/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QPUServer).GetConfig(ctx, req.(*ConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QPU_GetDataTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QPUServer).GetDataTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/qpu.QPU/GetDataTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QPUServer).GetDataTransfer(ctx, req.(*GetDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QPU_serviceDesc = grpc.ServiceDesc{
	ServiceName: "qpu.QPU",
	HandlerType: (*QPUServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _QPU_GetConfig_Handler,
		},
		{
			MethodName: "GetDataTransfer",
			Handler:    _QPU_GetDataTransfer_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Query",
			Handler:       _QPU_Query_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "qpu.proto",
}
