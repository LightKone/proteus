syntax = "proto3";

package qpu;
option go_package = "github.com/dvasilas/proteus/protos/qpu";

import "utils.proto";

service QPU {
    rpc Find(FindRequest) returns (stream QueryResultStream) {}
    rpc GetConfig(ConfigRequest) returns (ConfigResponse) {}
    rpc SubscribeOps(stream ReqStream) returns (stream OpStream) {}
    rpc GetSnapshot(SubRequest) returns (stream StateStream) {}
}

message FindRequest {
    //Timestamp is part of the attributes
    //Desclared explicitly here for easier parsing
    utils.TimestampPredicate timestamp = 1;
    repeated utils.AttributePredicate predicate = 2;
}

message ConfigRequest {
    utils.TimestampPredicate timestamp = 1;
}

message SubRequest {
    utils.TimestampPredicate timestamp = 1;
    bool sync = 2;
}

message QueryResultStream {
    utils.Object object = 1;
    utils.DataSet dataset = 2;
}

message ConfigResponse {
    string QPUType = 1;
    repeated utils.DataSet dataset = 2;
    repeated utils.AttributePredicate supportedQueries = 3;
}

message OpStream {
    string type = 1;
    utils.Object state = 2;
    utils.Operation operation = 3;
}

message StateStream {
    utils.Object object = 1;
    utils.DataSet dataset = 2;
}

message AckMsg {
    string msg = 1;
    string opId = 2;
}

message ReqStream {
    oneof payload {
        SubRequest request = 1;
        AckMsg ack = 2;
    }
}